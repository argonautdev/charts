{{- $name := include "argonaut-deployment.uname" . -}}
{{- $chartName := .Chart.Name -}}
{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- $hosts := .Values.hosts -}}
{{- $env := .Values.env -}}

---
# Configure Virtual Services
{{- range .Values.services }}
{{- if and .ingress .ingress.enabled $hosts }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: "{{ $name }}-{{- .name -}}-vs"
  labels:
    heritage: {{ $releaseService | quote }}
    release: {{ $releaseName | quote }}
    chart: {{ $chartName | quote }}
    app: {{ $name | quote }}
spec:
  hosts:
{{ toYaml $hosts | indent 4 }}
  gateways:
    - tools/ingress-gateway
  exportTo:
    - "*" # TBD - env interaction
  # terminated tls implementation
  {{- if or (eq .protocol "http") (and (eq .protocol "tls") (eq .ingress.tls "terminated")) }}
  http:
    - match:
        - uri:
            prefix: {{ .ingress.path }}
      rewrite:
        uri: "/" # {{ .ingress.path }}
      route:
        - destination:
            port:
              number: {{ .port }}
            host: "{{- $name -}} .{{- $env -}}.svc.cluster.local"
  {{- else if and (eq .protocol "tls") (eq .ingress.tls "passthrough") -}}
  # https passthrough implementation
  https:
    - match:
      - port: {{ .ingress.port }}
        sniHosts:
{{ toYaml $hosts | indent 10 }}
      route:
      - destination:
          host: "{{- $name -}} .{{- $env -}}.svc.cluster.local"
          port:
            number: {{ .port }}
  {{- else if eq .protocol "tcp" }}
  # tcp implementation
  tcp:
  - match:
    - port: {{ .ingress.port }}
    route:
    - destination:
        host: "{{- $name -}} .{{- $env -}}.svc.cluster.local"
        port:
          number: {{ .port }}
  {{- end -}}
{{- end }}
---
{{- end }}
