{{- $name := include "argonaut-deployment.uname" . -}}
{{- $chartName := .Chart.Name -}}
{{- $releaseName := .Release.Name -}}
{{- $releaseService := .Release.Service -}}
{{- $env := .Values.argonaut.env -}}
{{- $version := .Values.version | default .Release.Revision -}}

---
# Configure Virtual Services
{{- range .Values.services }}
{{- if .external }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: "{{ $name }}-{{- .port -}}-vs"
  labels:
    helm.sh/chart: {{ $chartName | quote }}
    app.kubernetes.io/name: {{ $name | quote }}
    app.kubernetes.io/managed-by: {{ $releaseService | quote }}
    app.kubernetes.io/instance: {{ $releaseName | quote }}
    argonaut.dev/env: {{ $env | quote }}
    app.kubernetes.io/version: {{ $version | quote }}
spec:
  hosts:
{{ toYaml .external.hosts | indent 4 }}
  gateways:
    - "ingress-gw-{{- $name }}"
  exportTo:
    - "."
  # terminated tls implementation
  {{- if or (eq .protocol "http") (eq .protocol "tls-terminated") (eq .protocol "grpc") }}
  http:
    - match:
        - uri:
            prefix: {{ .external.path }}
          port: {{ .external.port }}
      rewrite:
        uri: "/" 
      route:
        - destination:
            port:
              number: {{ .port }}
            host: "{{- $name -}}.{{- $env -}}.svc.cluster.local"
  {{- else if eq .protocol "tls-passthrough" -}}
  # https passthrough implementation
  tls:
    - match:
      - port: {{ .external.port }}
        sniHosts:
{{ toYaml .external.hosts | indent 10 }}
      route:
      - destination:
          host: "{{- $name -}}.{{- $env -}}.svc.cluster.local"
          port:
            number: {{ .port }}
  {{- else }}
  # tcp implementation
  tcp:
  - match:
    - port: {{ .port }}
    route:
    - destination:
        host: "{{- $name -}}.{{- $env -}}.svc.cluster.local"
        port:
          number: {{ .port }}
  {{- end -}}
{{- end }}
---
{{- end }}

---

# configure istio gateways
{{- if .Values.services }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: "ingress-gw-{{- $name }}"
spec:
  selector:
    istio: ingressgateway # uses istio ingress gateway in current namespace
  servers:
{{- range .Values.services -}}
{{- if .external -}}
    {{- if eq .protocol "http" }}
    - port:
        number: {{ .external.hostPort }}
        name: http2-{{- .external.hostPort }}
        protocol: HTTP2
      hosts:
{{ toYaml .external.hosts | indent 8 }}
      {{- if eq ( toString .external.hostPort ) "80" }}
      tls:
        httpsRedirect: true
    - port:
        number: 443
        name: https
        protocol: HTTPS
      hosts:
{{ toYaml .external.hosts | indent 8 }}
      tls:
        mode: SIMPLE
        credentialName: "{{ $env -}}/ingress-letsencrypt" # must be the same as secret
      {{- end }}
    {{- else if eq .protocol "tls-terminated" }}
    - port:
        number: {{ .external.hostPort }}
        name: https-{{- .external.hostPort }}
        protocol: HTTPS
      hosts:
{{ toYaml .external.hosts | indent 8 }}
      tls:
        mode: SIMPLE
        credentialName: "{{ $env -}}/ingress-letsencrypt" # must be the same as secret
    {{- else if eq .protocol "tls-passthrough" }}
    - port:
        number: {{ .external.hostPort }}
        name: https-{{- .external.hostPort }}
        protocol: HTTPS
      hosts:
{{ toYaml .external.hosts | indent 8 }}
      tls:
        mode: PASSTHROUGH
    {{- else if eq .protocol "grpc" }}
    - port:
        number: {{ .external.hostPort }}
        name: grpc-{{- .external.hostPort }}
        protocol: TCP
      hosts:
{{ toYaml .external.hosts | indent 8 }}
    {{- else }}
    - port:
        number: {{ .external.hostPort }}
        name: tcp-{{- .external.hostPort }}
        protocol: TCP
      hosts:
{{ toYaml .external.hosts | indent 8 }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}